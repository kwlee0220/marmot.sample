
def EMD = "구역/읍면동"
def BUILDINGS = "건물/통합정보";
def CARD_SALES = "주민/카드매출/월별_시간대/2015";
def FLOW_POP = "주민/유동인구/월별_시간대/2015";
	
def TEMP_DIR = "tmp/oldbld"
def TEMP_BLOCKS_EMD = "$TEMP_DIR/blocks_emd"
def TEMP_BUILDINGS_EMD = "$TEMP_DIR/buildings_emd";
def TEMP_CARD_SALES_EMD = "$TEMP_DIR/card_sale_emd";
def TEMP_FLOWPOP_EMD = "$TEMP_DIR/pop_emd";
def RESULT = "분석결과/지하철역사_추천/건물재생/result";


createDataSet(TEMP_BLOCKS_EMD) {
	force = true
	from plan("읍면동별 집계구 수집") {
		load("구역/지오비전_집계구_Point")
		spatialJoin("the_geom", EMD, output: "param.emd_cd,block_cd")
	}
}


def init = "_now = DateNow(); _pat = DatePattern('yyyyMMdd');"
def trans = """
_date = null;
if ( 사용승인일자 != null && 사용승인일자.length() == 8 ) {
	if ( 사용승인일자.endsWith('00') ) {
		사용승인일자 = 사용승인일자.substring(0,6) + '01'
	}
	_date = DateParseLE(사용승인일자, _pat);
}
else { _date = null; }
if ( _date != null ) {
	_age = (DateDaysBetween(_date, _now)) / 365L;
	old = _age >= 20 ? 1 : 0;
	be5 = _age >= 5 ? 1 : 0;
}
else { old = 0; be5 = 0; }
""";

createDataSet(TEMP_BUILDINGS_EMD) {
	force = true
	from plan("행정구역당 20년 이상된 건물 집계") {
		load(BUILDINGS)
		defineColumn("emd_cd:string", "pnu.substring(0,8)")
		expand("old:byte,be5:byte", RecordScript(init, trans))
		project("emd_cd,old,be5")
		aggregateByGroup('emd_cd', workerCount: 1) {
			old_cnt = SUM('old')
			be5_cnt = SUM('be5')
			bld_cnt = COUNT()
		}
		defineColumn("old_ratio:double", "(double)old_cnt/bld_cnt")
	}
}


def sumExpr = (0..23).collect {String.format("sale_amt_%02dtmst", it)}.join('+')
createDataSet(TEMP_CARD_SALES_EMD) {
	force = true
	from plan("읍면동별 2015년도 카드매출 집계") {
		load(CARD_SALES)
		defineColumn("sale_amt:double", sumExpr)
		project("block_cd,sale_amt")
		aggregateByGroup('block_cd') { sale_amt = SUM('sale_amt') }
		hashJoin("block_cd", TEMP_BLOCKS_EMD, "block_cd", output: "*,param.{emd_cd}")
		aggregateByGroup('emd_cd') { sale_amt = SUM('sale_amt') }
	}
}


def avgExpr = '(' + (0..23).collect { String.format("avg_%02dtmst", it) }.join('+') + ')/24.0'
createDataSet(TEMP_FLOWPOP_EMD) {
	force = true
	from plan("읍면동별 2015년도 유동인구 집계") {
		load(FLOW_POP)
		defineColumn("avg:double", avgExpr)
		project("block_cd,avg")
		aggregateByGroup('block_cd') { avg = AVG('avg') }
		hashJoin("block_cd", TEMP_BLOCKS_EMD, "block_cd", output: "*,param.{emd_cd}")
		aggregateByGroup('emd_cd', workerCount: 1) { pop_avg = AVG('avg') }
	}
}


createDataSet(RESULT) {
	force = true
	from plan("결과 통합") {
		loadHashJoinFile(TEMP_BLOCKS_EMD, "emd_cd", TEMP_CARD_SALES_EMD, "emd_cd",
						output: "left.*,right.*-{emd_cd}", type: FULL_OUTER_JOIN, workerCount: 1)
		hashJoin("emd_cd", TEMP_FLOWPOP_EMD, "emd_cd", output: "*,param.*-{emd_cd}",
					type: FULL_OUTER_JOIN, workerCount: 1)
		hashJoin("emd_cd", EMD, "emd_cd", output: "param.the_geom,*", workerCount: 1)
	}
}

deleteDataSet TEMP_BLOCKS_EMD, TEMP_BUILDINGS_EMD, TEMP_CARD_SALES_EMD, TEMP_FLOWPOP_EMD
deleteDataSet TEMP_DIR